#include<stdio.h>
#include<time.h>
#include<stdlib.h>
#include<limits.h>
#define MAX 50
int arr[MAX];

// Function to find min and max using Divide and Conquer
void findMinMax(int low, int high, int *min, int *max) {
    int mid, min1, max1, min2, max2;

    // If only one element
    if (low == high) {
        *min = *max = arr[low];
        return;
    }

    // If two elements
    if (high == low + 1) {
        if (arr[low] < arr[high]) {
            *min = arr[low];
            *max = arr[high];
        } else {
            *min = arr[high];
            *max = arr[low];
        }
        return;
    }

    // Divide the array into two halves
    mid = (low + high) / 2;

    // Recursively find min and max for both halves
    findMinMax(low, mid, &min1, &max1);
    findMinMax(mid + 1, high, &min2, &max2);

    // Final min and max
    *min = (min1 < min2) ? min1 : min2;
    *max = (max1 > max2) ? max1 : max2;
}

// Driver Code
int main() 
{
	clock_t start,end;
	double t;
	start=clock();
	int i,n,r,min = INT_MAX, max = INT_MIN;;
	printf("Enter no of elements: ");
	scanf("%d",&n);
	srand(time(0));
	for(i=0;i<n;i++)
	{
		r=(rand()%n)+1;
		arr[i]=r;
	}
	printf("The array elements:");
	for(i=0;i<n;i++)
	{
		arr[i]=rand();
	}
    findMinMax(0, n - 1, &min, &max);
    printf("Minimum element: %d\n", min);
    printf("Maximum element: %d\n", max);
	end=clock();
	printf("time=%f",(double) (end-start)/CLOCKS_PER_SEC);
    return 0;
}
