#include <stdio.h>
#include <stdlib.h>
#include <time.h>

// Function to compare for qsort
int compare(const void *a, const void *b) {
    return (*(int*)a - *(int*)b);
}

// Binary search function
int binarySearch(int arr[], int n, int key) {
    int low = 0, high = n - 1;

    while (low <= high) {
        int mid = (low + high) / 2;

        if (arr[mid] == key)
            return mid;
        else if (arr[mid] < key)
            low = mid + 1;
        else
            high = mid - 1;
    }

    return -1; // Not found
}

int main() {
    int n;

    // Size of array
    printf("Enter the number of elements: ");
    scanf("%d", &n);

    int arr[n];

    // Seed for random numbers
    srand(time(NULL));

    // Generate random numbers
    printf("Generated Array: ");
    for (int i = 0; i < n; i++) {
        arr[i] = rand() % 100;  // Random numbers from 0 to 99
        printf("%d ", arr[i]);
    }

    // Sort the array
    qsort(arr, n, sizeof(int), compare);

    // Display sorted array
    printf("\nSorted Array: ");
    for (int i = 0; i < n; i++) {
        printf("%d ", arr[i]);
    }

    // Pick a random number to search (existing or random)
    int key = arr[rand() % n];  // Pick an element that exists
    printf("\n\nSearching for: %d\n", key);

    // Perform binary search
    int result = binarySearch(arr, n, key);

    if (result != -1)
        printf("Element %d found at index %d (0-based)\n", key, result);
    else
        printf("Element %d not found in array\n", key);

    return 0;
}
